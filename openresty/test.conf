lua_package_path "/usr/local/openresty/lualib/resty/?.lua;;";

server {
    listen 80;
    server_name localhost;


    location / {
        set $proxy_target "";
        access_by_lua_block {
            local args = ngx.req.get_uri_args()
            local pkey = args.pkey

            if not pkey then
            ngx.status = ngx.HTTP_BAD_REQUEST
            ngx.say("Missing pkey parameter")
            return ngx.exit(ngx.HTTP_BAD_REQUEST)
            end

            local moongoo = require("resty.moongoo")

            local mg, err = moongoo.new("mongodb://root:mongotest123@10.130.64.16:28017/")
            if not mg then
                ngx.status = ngx.HTTP_INTERNAL_SERVER_ERROR
                ngx.say("Failed to connect to MongoDB:  ",err)
                return ngx.exit(ngx.HTTP_INTERNAL_SERVER_ERROR)
            end

            local col = mg:db("publish"):collection("v2_migrated_map")
            local res,err = col:find_one({pkey = pkey})

            if not res then
                ngx.status = ngx.HTTP_NOT_FOUND
                ngx.say("not found pkey:  ",pkey)
                return ngx.exit(ngx.HTTP_NOT_FOUND)
            end

            if res.migrated == true then
                ngx.var.proxy_target = "http://publish_v2"
            else
                ngx.var.proxy_target = "http://publish_v1"
            end
        }

        return 410 $proxy_target;
        root /usr/local/openresty/nginx/html;
        index index.html index.htm;
    }
}